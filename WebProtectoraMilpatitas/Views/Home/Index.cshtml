@model PagedList.IPagedList<WebProtectoraMilpatitas.Models.AnimalViewModel>
@using PagedList.Mvc
@using ProtectoraMilpatitasGenNHibernate.CEN.ProtectoraMilpatitas;
@using ProtectoraMilpatitasGenNHibernate.CAD.ProtectoraMilpatitas;
@using ProtectoraMilpatitasGenNHibernate.EN.ProtectoraMilpatitas;
@{
    ViewBag.Title = "Protectora Milpatitas";
    Layout = "~/Views/Shared/_LayoutUsu.cshtml";
}

@using (Html.BeginForm("BusquedaRapida", "Animal", FormMethod.Post , new { @id="busqueda_Rapida" }))
{
    @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
<label for="buscarRapid" class="fas fa-search"></label><input type="search" placeholder="busca animal por nombre" name="nom" />
                <input type="submit" style="display:none;" value="Buscar" id="buscarRapid" class="btn btn-default" />
           
}
@if (((string)TempData["mensajeModal"]) != null && ((string)TempData["mensajeModal"]).Equals("¡Enhorabuena!, Has creado el contrato con éxito, haga click en el enlace de abajo para descargarlo"))
{
<div id="capafondo">
  <!--  <script>"mensajeModal();"</script> -->
    <article id="ar">
        <h2>Contrato</h2>
    <p>¡Enhorabuena!, Has creado el contrato con éxito, haga click en el enlace de abajo para descargarlo</p>
    <p>@Html.ActionLink("Contrato", "Imprimir", "ContratoAdopcion", new { target = "_blank" })</p> 
    <footer><button class="button" onclick="cerrarMensajeModal();">cerrar</button></footer>
     </article> 
</div>


}

<h3>@Html.ActionLink("Babies", "ObtenerBabies", "Animal")</h3>
<h3>@Html.ActionLink("Recién llegados", "ObtenerRecienLlegados", "Animal")</h3>
<h3>@Html.ActionLink("Casos especiales","ObtenerCasosEspeciales","Animal")</h3>
<h3>@Html.ActionLink("Más urgentes", "ObtenerCasosEspeciales", "Animal")</h3>

<h2 style="text-align: center;">Últimos animales</h2>

<table style="width:50%; margin-left:auto; margin-right:auto; margin-bottom:1em;" class="table">
    <tr>
        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Nombre : @Html.TextBox("nameSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Edad : @Html.TextBox("edadSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Sexo(H/M) : @Html.TextBox("sexoSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Centro : @Html.TextBox("centroSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Caracter : @Html.TextBox("caracterSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Estado Salud: @Html.TextBox("estSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Especie : @Html.TextBox("espSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }

        @using (Html.BeginForm())
        {
            <th style="padding:1em;">
                Raza: @Html.TextBox("razSearch") <input style="display:none;" type="submit" value="Buscar" />
            </th>
        }
    </tr>

    <tr>
        <th>
            @Html.ActionLink("Ordenar por Nombre", "Index", new { sortOrder = ViewBag.NameSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Edad", "Index", new { sortOrder = ViewBag.EdadSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Sexo", "Index", new { sortOrder = ViewBag.SexoSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Centro", "Index", new { sortOrder = ViewBag.CentroSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Caracter", "Index", new { sortOrder = ViewBag.CaracterSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Estado Salud", "Index", new { sortOrder = ViewBag.EstadoSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Especie", "Index", new { sortOrder = ViewBag.EspecieSort })
        </th>
        <th>
            @Html.ActionLink("Ordenar por Raza", "Index", new { sortOrder = ViewBag.RazaSort })
        </th>
    </tr>
</table>

<main id="mainart">
        @foreach (var item in Model)
        {
    <article class="articulos">
        <h2>@Html.ActionLink(item.Nombre, "Details", "Animal", new { id = item.Id }, htmlAttributes: null)</h2>

        <img src="/@Html.DisplayFor(modelItem => item.Foto)" />
        <div class="animIndex"> 
            <p>
                <b>Edad: </b>
                @Html.DisplayFor(modelItem => item.Edad)
            </p>
            <p>
                <b>Sexo: </b>

                @if (item.Sexo.ToString().Equals("H"))
                {
                    <label style="font-weight:normal;">Hembra</label>
                }
                else
                {
                    <label style="font-weight:normal;">Macho</label>
                }
            </p>
            <p>
                <b>
                    Centro:
                </b> @Html.DisplayFor(modelItem => item.Centro)
            </p>
            <p>
                <b>
                    Caracter:
                </b> @Html.DisplayFor(modelItem => item.Caracter)
            </p>
            <p>
                <b>Datos Medicos: </b>
                @if (item.DatosMedicos.ToString().Equals("enRecuperacion"))
                {
                    <label style="font-weight:normal;">En Recuperación</label>
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.DatosMedicos)

                }
            </p>
            <p>
                <b>Especie: </b>
                @Html.DisplayFor(modelItem => item.NomEspecie)
            </p>
            <p>
                <b>Raza: </b>
                @Html.DisplayFor(modelItem => item.NomRaza)
            </p>


        </div>

       @* <p>@Html.ActionLink("Detalles", "Details", new { id = item.Id })</p>*@

        @{
            bool comprobar = false;
            string nombreUsu = "";
            string idUsu = "";

            if (Session["Usuario"] != null)
            {
                nombreUsu = ((UsuarioEN)Session["Usuario"]).Nombre;
                idUsu = ((UsuarioEN)Session["Usuario"]).Email;
            }

            IList<SolicitudAdopcionEN>
                soliEN = new SolicitudAdopcionCEN().Obtener_Solicitud_Usuario(idUsu);

            foreach (SolicitudAdopcionEN sol in soliEN)
            {
                if (sol.Animal.Id == item.Id && sol.Usuario.Email.Equals(idUsu))
                {
                    comprobar = true;
                    break;
                }
            }

            if (comprobar)
            {
                <p>Ya has realizado una solicitud a este animal</p>
            }
            else
            {
                if (item.EstadoAdopcion.ToString().Equals("SinTramite") || item.EstadoAdopcion.ToString().Equals("EnSolicitud"))
                {
                    <p><i class="fas fa-hand-holding-heart"></i> @Html.ActionLink("Adoptar", "Encuesta", "SolicitudAdopcion", new { id = item.Id }, new { @class = "Buttons" })</p>
                }
                else
                {

                    <p>Animal no disponible!</p>
                }
            }
        }
    </article>
    }

</main>


<br />
<p style="text-align: center;"> Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount</p>

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
